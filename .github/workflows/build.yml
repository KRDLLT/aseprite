name: build
on: [push, pull_request]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        build_type: [RelWithDebInfo, Debug]
        ui: [gui, cli]
        scripting: [lua, noscripts]
        exclude:
          - build_type: Debug
            ui: gui
          - build_type: RelWithDebInfo
            ui: cli
          - build_type: RelWithDebInfo
            scripting: noscripts
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: Install Dependencies
      if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y \
          libpixman-1-dev libfreetype6-dev libharfbuzz-dev zlib1g-dev \
          libx11-dev libxcursor-dev libxi-dev libgl1-mesa-dev
    - name: Install Skia
      if: ${{ matrix.ui == 'gui' }}
      shell: bash
      run: |
        if [[ "${{ runner.os }}" == "Windows" ]] ; then
          choco install wget -y --no-progress
          wget https://github.com/aseprite/skia/releases/download/m102-861e4743af/Skia-Windows-Release-x64.zip
          unzip Skia-Windows-Release-x64.zip -d skia
        elif [[ "${{ runner.os }}" == "macOS" ]] ; then
          wget https://github.com/aseprite/skia/releases/download/m102-861e4743af/Skia-macOS-Release-arm64.zip
          unzip Skia-macOS-Release-arm64.zip -d skia
        else
          wget https://github.com/aseprite/skia/releases/download/m102-861e4743af/Skia-Linux-Release-x64-libstdc++.zip
          unzip Skia-Linux-Release-x64-libstdc++.zip -d skia
        fi
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1
      if: ${{ runner.os == 'Linux' || runner.os == 'macOS' }}
      with:
        key: ${{ matrix.os }}-${{ matrix.ui }}-${{ matrix.scripting }}-${{ matrix.build_type }}
    - uses: aseprite/get-ninja@main
    - uses: ilammy/msvc-dev-cmd@v1
      if: runner.os == 'Windows'
    - name: Generating Makefiles
      shell: bash
      run: |
        if [[ "${{ runner.os }}" == "Windows" ]] ; then
          出口环境_C缓存=关闭
        其他的
          出口能力_C缓存=上
        菲

        if [[ "${{ matrix.ui }}" == "gui" ]] ; then
          出口拉法兹后端=斯基亚
        其他的
          出口拉法兹后端=无
        菲

        if [[ "${{ matrix.scripting }}" == "lua" ]] ; then
          出口许可证=
        其他的
          出口许可证_脚本=删除
        菲

        if [[ "${{ runner.os }}" == "macOS" ]] ; then
          出口滑雪_弓形=ARM64
        其他的
          出口滑雪=X64
        菲

        哥德-斯。-B构建-G忍者/
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DCMAKE_OSX_DEPLOYMENT_TARGET=10.9 \
          -启动_测试=上/
          -DENABLE_SCRIPTING=$enable_scripting \
          -DENABLE_CCACHE=$enable_ccache \
          -DLAF_BACKEND=$laf_backend \
          -斯基卡_迪尔=斯卡亚/
          ---------------------------------------------------------------------------
    -         姓名          : 编译
              外壳               : 猛击
       跑        : |
        CD建造和忍者
    - 姓名       : 运行C++测试
       外壳      : 猛击
       跑     : |
        if [[ "${{ runner.os }}" == "Linux" ]] ; then
          分时门氏xvfb=xvfb运行
        菲
        信用卡建造&&;$xvfb信用卡--输出
    - 姓名   : 进行CLI测试
       如果         : $ {        { matrix.scripting == 'lua'        }      }
      外壳     : 猛击
      跑    : |
        if [[ "${{ runner.os }}" == "Linux" ]] ; then
          分时门xvfb=xvfb运行
        菲
        出口东盟电力公司=美元
        CD测试
        美州保护Xvfb
